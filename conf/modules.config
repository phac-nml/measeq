/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    // Default publish
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
    // Args and Prefix Adjustments
    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: NANOQ {
        ext.args = '-l 200 -m 2000 -q 12 --json'
    }

    withName: FASTP {
        ext.args = '--cut_front --cut_tail --trim_poly_x --cut_mean_quality 25 --average_qual 25 --length_required 100'
    }

    withName: BWAMEM2_MEM {
        ext.prefix = { "${meta.id}.sorted" }
        publishDir = [
            path: { "${params.outdir}/bam/bwamem" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: BCFTOOLS_CONSENSUS_AMBIGUOUS {
        ext.prefix = { "${meta.id}.ambiguous" }
        ext.args = '-I'
    }

    withName: NEXTCLADE_RUN_N450 {
        ext.prefix = { "${meta.id}-N450" }
    }

    withName: NEXTCLADE_RUN_CUSTOM {
        ext.prefix = { "${meta.id}-WG" }
    }

    withName: SAMTOOLS_DEPTH {
        ext.args = '-a'
        ext.prefix = { "${meta1.id}_depth" }
        publishDir = [
            path: { "${params.outdir}/reporting/positional_depth" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: BEDTOOLS_COVERAGE {
        ext.prefix = { "${meta.id}_amplicon_stats" }
        ext.args = '-F 0.90'
        publishDir = [
            path: { "${params.outdir}/reporting/amplicon" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    // ~~~~~~~~~~~~~~~~~~~~~~~ //
    // Output Path Adjustments
    // ~~~~~~~~~~~~~~~~~~~~~~~ //
    withName: "GENERATE.*" {
        publishDir = [
            path: { "${params.outdir}/reference" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: "SPLIT_AMPLICON_REGION" {
        publishDir = [
            path: { "${params.outdir}/reference/amplicon_regions" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: "BWAMEM2_INDEX" {
        publishDir = [
            path: { "${params.outdir}/reference" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: "SAMTOOLS_INDEX" {
        publishDir = [
            path: { "${params.outdir}/bam/bwamem" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: "IVAR_TRIM" {
        publishDir = [
            path: { "${params.outdir}/bam/ivar" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: "FREEBAYES" {
        publishDir = [
            path: { "${params.outdir}/vcf/freebayes" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: "PROCESS_VCF" {
        publishDir = [
            path: { "${params.outdir}/vcf/processed_vcf" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: ".*MASK.*" {
        publishDir = [
            path: { "${params.outdir}/mask" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    // We adjust the names later so no need to publish these
    withName: "BCFTOOLS_CONSENSUS.*" {
        publishDir = [
            enabled: false
        ]
    }

    withName: "ADJUST.*" {
        publishDir = [
            path: { "${params.outdir}/consensus" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    // This just makes individual 2 line TSV files that get added to the final
    //  QC data so no need to output them alone as an intermediate
    withName: "COMPARE_INTERNAL_DSID" {
        publishDir = [
            enabled: false
        ]
    }

    withName: "MAKE_SAMPLE_QC_CSV" {
        publishDir = [
            path: { "${params.outdir}/reporting/sample_csv" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: "MAKE_FINAL_QC_CSV" {
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    // ~~~~~~~~~~~~~~~~~~~~~~~ //
    // Reporting Intermediates //
    //  Amplicons
    withName: "SAMPLE_AMPLICON.*" {
        publishDir = [
            path: { "${params.outdir}/reporting/amplicon" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: "AMPLICON_.*_HEATMAP" {
        publishDir = [
            path: { "${params.outdir}/reporting/amplicon" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: "AMPLICON_MULTIQC" {
        publishDir = [
            path: { "${params.outdir}" },
            pattern: "*.html",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    // Summary
    withName: "POSITIONAL_N_DEPTH" {
        publishDir = [
            path: { "${params.outdir}/reporting/positional_n" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: "PYSAMSTATS" {
        publishDir = [
            path: { "${params.outdir}/reporting/positional_quality" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: "CALCULATE_BAM_VARIATION" {
        publishDir = [
            path: { "${params.outdir}/reporting/sample_variation" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: "NORMALIZE_DEPTH_MATRIX" {
        publishDir = [
            path: { "${params.outdir}/reporting/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: "MAKE_CUSTOM_REPORT" {
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
